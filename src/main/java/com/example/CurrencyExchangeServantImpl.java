 /* KIARA - Middleware for efficient and QoS/Security-aware invocation of services and exchange of messages
 *
 * Copyright (C) 2014 Proyectos y Sistemas de Mantenimiento S.L. (eProsima)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library. If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * @file CurrencyExchangeServantExample.java
 * This file contains the servant implementation.
 *
 * This file was generated by using the tool kiaragen.
 *
 */
 
 
package com.example;
/**
 * Class where the actual implementation of the procedures is located. 
 *
 * @author Kiaragen tool.
 *
 */
class CurrencyExchangeServantImpl extends CurrencyExchangeServant {

	/*!
	 * @brief This method implements the proxy part of the protocol for the operation lookup.
	 *        It has to be implemented by the child classes.
	 */

	public ExchangeRate lookup (/*in*/ java.lang.String from, /*in*/ java.lang.String to) {
	
		// Your implementation code goes here
		
		return null;
	}

	/*!
	 * @brief This method implements the proxy part of the protocol for the operation convert.
	 *        It has to be implemented by the child classes.
	 */

	public float convert (/*in*/ java.lang.String from, /*in*/ java.lang.String to, /*in*/ float value) {
	
		// Your implementation code goes here
		
		return (float) 0.0;
	}


	
}

